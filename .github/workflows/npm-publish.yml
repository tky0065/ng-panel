# This workflow will build, test and publish the ng-panel library to npm when pushing to prod branch
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: Build and Publish to NPM

on:
  push:
    branches: [ prod ]
  pull_request:
    branches: [ prod ]

permissions:
  contents: write  # Required for creating and pushing tags
  packages: write  # Required for publishing packages

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for version calculation
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build library
        run: npm run build:lib
      
      - name: Run tests (headless)
        run: npm run test:ci
        env:
          CHROME_BIN: /usr/bin/google-chrome-stable
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-ng-panel
          path: dist/ng-panel/

  publish-npm:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/prod'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-ng-panel
          path: dist/ng-panel/
      
      - name: Determine version bump
        id: version
        run: |
          # Get the current version from package.json
          CURRENT_VERSION=$(node -p "require('./projects/ng-panel/package.json').version")
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          
          # Check commit messages for version bump indicators
          COMMIT_MSG=$(git log -1 --pretty=%B)
          if [[ $COMMIT_MSG == *"BREAKING CHANGE"* ]] || [[ $COMMIT_MSG == *"major:"* ]]; then
            BUMP_TYPE="major"
          elif [[ $COMMIT_MSG == *"feat:"* ]] || [[ $COMMIT_MSG == *"feature:"* ]]; then
            BUMP_TYPE="minor"
          else
            BUMP_TYPE="patch"
          fi
          echo "bump_type=$BUMP_TYPE" >> $GITHUB_OUTPUT
          
          # Calculate new version
          NEW_VERSION=$(npx semver $CURRENT_VERSION -i $BUMP_TYPE)
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "New version will be: $NEW_VERSION (bump: $BUMP_TYPE)"
      
      - name: Update version in package.json
        run: |
          # Update the library package.json version
          cd projects/ng-panel
          npm version ${{ steps.version.outputs.new_version }} --no-git-tag-version
          cd ../..
          
          # Rebuild with new version
          npm run build:lib
      
      - name: Publish to NPM
        run: |
          cd dist/ng-panel
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Create Git tag
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag -a "v${{ steps.version.outputs.new_version }}" -m "Release v${{ steps.version.outputs.new_version }}"
          git push origin "v${{ steps.version.outputs.new_version }}"
